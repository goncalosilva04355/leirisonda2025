var d=Object.defineProperty;var l=(r,e,n)=>e in r?d(r,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[e]=n;var c=(r,e,n)=>l(r,typeof e!="symbol"?e+"":e,n);import{F as p}from"./index-DSMUUpBF.js";import"./react-vendor-rbdJLrTD.js";import"./vendor-C-G65PT7.js";import"./pdf-vendor-BI33O7zM.js";import"./ui-vendor-Bp3IFwLp.js";class g{constructor(){c(this,"firestoreService",new p);c(this,"syncInterval",null);c(this,"pendingOperations",[]);this.startAutoSync(),this.setupOnlineListener()}startAutoSync(){this.syncInterval=setInterval(()=>{this.performBackgroundSync()},3e5)}setupOnlineListener(){window.addEventListener("online",()=>{console.log("üåê Conex√£o restaurada - iniciando sincroniza√ß√£o"),this.performBackgroundSync()}),window.addEventListener("offline",()=>{console.log("üì¥ Modo offline - dados salvos localmente")})}async performBackgroundSync(){try{if(!navigator.onLine){console.log("üì¥ Offline - saltando sincroniza√ß√£o");return}console.log("üîÑ Iniciando sincroniza√ß√£o autom√°tica..."),await Promise.all([this.syncCollection("obras","works"),this.syncCollection("manutencoes","maintenances"),this.syncCollection("piscinas","pools"),this.syncCollection("clientes","clients"),this.syncCollection("utilizadores","app-users")]),await this.processPendingOperations(),console.log("‚úÖ Sincroniza√ß√£o autom√°tica conclu√≠da"),localStorage.setItem("lastSyncTime",new Date().toISOString())}catch(e){console.warn("‚ö†Ô∏è Erro na sincroniza√ß√£o autom√°tica:",e)}}async syncCollection(e,n){try{let a=[];try{e==="obras"?a=await this.firestoreService.getObras():e==="manutencoes"?a=await this.firestoreService.getMaintenances():e==="piscinas"?a=await this.firestoreService.getPools():e==="clientes"?a=await this.firestoreService.getClients():e==="utilizadores"&&(a=await this.firestoreService.getUsers())}catch{console.log(`‚ÑπÔ∏è Firebase indispon√≠vel para ${e}`);return}const t=JSON.parse(localStorage.getItem(n)||"[]"),i=this.mergeData(t,a);localStorage.setItem(n,JSON.stringify(i)),await this.syncLocalToFirebase(t,a,e)}catch(a){console.warn(`‚ö†Ô∏è Erro ao sincronizar ${e}:`,a)}}mergeData(e,n){const a=[...n];return e.forEach(t=>{n.some(s=>s.id===t.id||s.localId===t.id)||(this.addToPendingOperations("create","obras",t),a.push({...t,needsSync:!0}))}),a.map(t=>{const i=e.find(s=>s.id===t.id||s.id===t.localId);if(i&&i.updatedAt&&t.updatedAt){const s=new Date(i.updatedAt).getTime(),o=new Date(t.updatedAt).getTime();if(s>o)return this.addToPendingOperations("update","obras",i),{...i,firebaseId:t.id}}return t})}async syncLocalToFirebase(e,n,a){const t=e.filter(i=>!n.some(o=>o.id===i.id||o.localId===i.id)||i.needsSync);for(const i of t)try{a==="obras"?await this.firestoreService.addObra(i):a==="manutencoes"?await this.firestoreService.addMaintenance(i):a==="piscinas"?await this.firestoreService.addPool(i):a==="clientes"&&await this.firestoreService.addClient(i),console.log(`‚úÖ Item sincronizado para Firebase: ${a}`)}catch(s){console.warn("‚ö†Ô∏è Falha ao sincronizar item para Firebase:",s),this.addToPendingOperations("create",a,i)}}addToPendingOperations(e,n,a){this.pendingOperations.push({collection:n,operation:e,data:a,localId:a.id||`temp-${Date.now()}`}),this.pendingOperations.length>100&&(this.pendingOperations=this.pendingOperations.slice(-100))}async processPendingOperations(){if(this.pendingOperations.length===0)return;console.log(`üîÑ Processando ${this.pendingOperations.length} opera√ß√µes pendentes...`);const e=[...this.pendingOperations];this.pendingOperations=[];for(const n of e)try{await this.executeFirebaseOperation(n),console.log(`‚úÖ Opera√ß√£o pendente processada: ${n.operation}`)}catch(a){console.warn("‚ö†Ô∏è Falha na opera√ß√£o pendente:",a),this.pendingOperations.push(n)}}async executeFirebaseOperation(e){const{collection:n,operation:a,data:t}=e;n==="obras"&&(a==="create"?await this.firestoreService.addObra(t):a==="update"?await this.firestoreService.updateObra(t.id,t):a==="delete"&&await this.firestoreService.deleteObra(t.id))}async addObra(e){const n={...e,id:e.id||`local-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,createdAt:e.createdAt||new Date().toISOString(),updatedAt:new Date().toISOString()},a=JSON.parse(localStorage.getItem("works")||"[]");a.push(n),localStorage.setItem("works",JSON.stringify(a));try{if(navigator.onLine){const t=await this.firestoreService.addObra(n);return console.log("‚úÖ Obra salva no Firebase e local"),t}else this.addToPendingOperations("create","obras",n),console.log("üì¥ Obra salva localmente - sincronizar√° quando online")}catch(t){console.warn("‚ö†Ô∏è Erro Firebase, dados salvos localmente:",t),this.addToPendingOperations("create","obras",n)}return n}async addMaintenance(e){const n={...e,id:e.id||`local-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,createdAt:e.createdAt||new Date().toISOString(),updatedAt:new Date().toISOString()},a=JSON.parse(localStorage.getItem("maintenances")||"[]");a.push(n),localStorage.setItem("maintenances",JSON.stringify(a));try{if(navigator.onLine){const t=await this.firestoreService.addMaintenance(n);return console.log("‚úÖ Manuten√ß√£o salva no Firebase e local"),t}else this.addToPendingOperations("create","manutencoes",n),console.log("üì¥ Manuten√ß√£o salva localmente")}catch(t){console.warn("‚ö†Ô∏è Erro Firebase para manuten√ß√£o:",t),this.addToPendingOperations("create","manutencoes",n)}return n}getSyncStatus(){return{isOnline:navigator.onLine,lastSync:localStorage.getItem("lastSyncTime")||"Nunca",pendingSync:this.pendingOperations.length,firebaseAvailable:this.firestoreService!==null}}async forceSyncNow(){console.log("üöÄ Sincroniza√ß√£o manual iniciada..."),await this.performBackgroundSync()}destroy(){this.syncInterval&&clearInterval(this.syncInterval)}}const m=new g;export{m as default,m as hybridDataSync};
